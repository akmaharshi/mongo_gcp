- name: Compute Engine Instance Examples
  hosts: localhost
  gather_facts: no
  vars_files:
    - mongo_vars/auth
    - mongo_vars/machines
    - mongo_vars/zone

  tasks:
    - name: create a root disk
      gcp_compute_disk:
        name: mongo-root
        size_gb: 100
        source_image: "{{ image }}"
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present

    - name: create a mongo disk
      gcp_compute_disk:
        name: "{{ item }}-disk"
        size_gb: 1000
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      with_items: "{{ mongo_machines.split(',') }}"

    - name: create multiple mongo instances
      gce:
        instance_names: "{{ mongo_machines }}"
        zone: "{{ zone }}"
        machine_type: "{{ machine_type }}" 
        image: "{{ image }}"
        disk_auto_delete: false
        state: present
        service_account_email: "{{ service_mail }}"
        credentials_file: "{{ gcp_cred_file }}"
        project_id: "{{ gcp_project }}"
        metadata : '{ "startup-script" : "yum update" }'
        network: stage
        subnetwork: stage
        service_account_permissions:
          - https://www.googleapis.com/auth/ndev.clouddns.readwrite
          - https://www.googleapis.com/auth/compute
          - https://www.googleapis.com/auth/devstorage.read_only
          - https://www.googleapis.com/auth/logging.write
          - https://www.googleapis.com/auth/monitoring
          - https://www.googleapis.com/auth/servicecontrol
          - https://www.googleapis.com/auth/service.management.readonly
          - https://www.googleapis.com/auth/trace.append
      register: gce

    - name: Attach disks to existing instances
      gce_pd:
        instance_name: "{{ item.1.name }}"
        name: "{{ item.0 }}-disk"
        project_id: "{{ gcp_project }}"
        mode: READ_WRITE
        service_account_email: "{{ service_mail }}"
        delete_on_termination: yes
        zone: "{{ zone }}"
        pem_file: "{{ gcp_cred_file }}"
        state: present
      with_together: 
        - "{{ mongo_machines.split(',') }}"
        - "{{ gce.instance_data }}"

    - name: Save host data
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: mongo_instances_ips
      with_items: "{{ gce.instance_data }}"

    - name: Wait for SSH for instances
      wait_for:
        delay: 1
        host: "{{ item.public_ip }}"
        port: 22
        state: started
        timeout: 30
      with_items: "{{ gce.instance_data }}"

- name: Configure Hosts
  hosts: mongo_instances_ips
  become: yes
  become_method: sudo
  roles:
    - base_configuration
    - mongo
